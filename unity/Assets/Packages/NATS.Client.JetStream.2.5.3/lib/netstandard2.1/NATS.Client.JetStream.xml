<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NATS.Client.JetStream</name>
    </assembly>
    <members>
        <member name="P:NATS.Client.JetStream.INatsJSConsumer.Info">
            <summary>
            Consumer info object as retrieved from NATS JetStream server at the time this object was created, updated or refreshed.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSConsumer.ConsumeAsync``1(NATS.Client.Core.INatsDeserialize{``0},NATS.Client.JetStream.NatsJSConsumeOpts,System.Threading.CancellationToken)">
            <summary>
            Starts an enumerator consuming messages from the stream using this consumer.
            </summary>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="opts">Consume options. (default: <c>MaxMsgs</c> 1,000)</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <typeparam name="T">Message type to deserialize.</typeparam>
            <returns>Async enumerable of messages which can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSProtocolException">Consumer is deleted, it's push based or request sent to server is invalid.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSConsumer.NextAsync``1(NATS.Client.Core.INatsDeserialize{``0},NATS.Client.JetStream.NatsJSNextOpts,System.Threading.CancellationToken)">
            <summary>
            Consume a single message from the stream using this consumer.
            </summary>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="opts">Next message options. (default: 30 seconds timeout)</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <typeparam name="T">Message type to deserialize.</typeparam>
            <returns>Message retrieved from the stream or <c>NULL</c></returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSProtocolException">Consumer is deleted, it's push based or request sent to server is invalid.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error sending the message or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <remarks>
            <para>
            If the request to server expires (in 30 seconds by default) this call returns <c>NULL</c>.
            </para>
            <para>
            This method is implemented as a fetch with <c>MaxMsgs=1</c> which means every request will create a new subscription
            on the NATS server. This would be inefficient if you're consuming a lot of messages and you should consider using
            fetch or consume methods.
            </para>
            </remarks>
            <example>
            The following example shows how you might process messages:
            <code lang="C#">
            var next = await consumer.NextAsync&lt;Data&gt;();
            if (next is { } msg)
            {
                // process the message
                await msg.AckAsync();
            }
            </code>
            </example>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSConsumer.FetchAsync``1(NATS.Client.JetStream.NatsJSFetchOpts,NATS.Client.Core.INatsDeserialize{``0},System.Threading.CancellationToken)">
            <summary>
            Consume a set number of messages from the stream using this consumer.
            </summary>
            <param name="opts">Fetch options. (default: <c>MaxMsgs</c> 1,000 and timeout in 30 seconds)</param>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <typeparam name="T">Message type to deserialize.</typeparam>
            <returns>Async enumerable of messages which can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSProtocolException">Consumer is deleted, it's push based or request sent to server is invalid.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error sending the message or this consumer object isn't valid anymore because it was deleted earlier.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSConsumer.RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the consumer info from the server and update this consumer.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSConsumer.FetchNoWaitAsync``1(NATS.Client.JetStream.NatsJSFetchOpts,NATS.Client.Core.INatsDeserialize{``0},System.Threading.CancellationToken)">
             <summary>
             Consume a set number of messages from the stream using this consumer.
             Returns immediately if no messages are available.
             </summary>
             <param name="serializer">Serializer to use for the message type.</param>
             <param name="opts">Fetch options. (default: <c>MaxMsgs</c> 1,000 and timeout is ignored)</param>
             <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
             <typeparam name="T">Message type to deserialize.</typeparam>
             <returns>Async enumerable of messages which can be used in a <c>await foreach</c> loop.</returns>
             <exception cref="T:NATS.Client.JetStream.NatsJSProtocolException">Consumer is deleted, it's push based or request sent to server is invalid.</exception>
             <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error sending the message or this consumer object isn't valid anymore because it was deleted earlier.</exception>
             <remarks>
             <para>
             This method will return immediately if no messages are available.
             </para>
             <para>
             Using this method is discouraged because it might create an unnecessary load on your cluster.
             Use <c>Consume</c> or <c>Fetch</c> instead.
             </para>
             </remarks>
             <example>
             <para>
             However, there are scenarios where this method is useful. For example if your application is
             processing messages in batches infrequently (for example every 5 minutes) you might want to
             consider <c>FetchNoWait</c>. You must make sure to count your messages and stop fetching
             if you received all of them in one call, meaning when <c>count &lt; MaxMsgs</c>.
             </para>
             <code>
             const int max = 10;
             var count = 0;
            
             await foreach (var msg in consumer.FetchAllNoWaitAsync&lt;int&gt;(new NatsJSFetchOpts { MaxMsgs = max }))
             {
                 count++;
                 Process(msg);
                 await msg.AckAsync();
             }
            
             if (count &lt; max)
             {
                 // No more messages. Pause for more.
                 await Task.Delay(TimeSpan.FromMinutes(5));
             }
             </code>
             </example>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSContext.Connection">
            <summary>
            Connection to the NATS server.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSContext.Opts">
            <summary>
            Provides configuration options for the JetStream context.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.CreateOrderedConsumerAsync(System.String,NATS.Client.JetStream.NatsJSOrderedConsumerOpts,System.Threading.CancellationToken)">
            <summary>
            Creates new ordered consumer.
            </summary>
            <param name="stream">Stream name to create the consumer under.</param>
            <param name="opts">Ordered consumer options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving ordered data from the stream.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.CreateOrUpdateConsumerAsync(System.String,NATS.Client.JetStream.Models.ConsumerConfig,System.Threading.CancellationToken)">
            <summary>
            Creates new consumer if it doesn't exists or updates an existing one with the same name.
            </summary>
            <param name="stream">Name of the stream to create or update consumer under.</param>
            <param name="config">Consumer configuration.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving data from the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">Ack policy is set to <c>none</c> or there was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.CreateConsumerAsync(System.String,NATS.Client.JetStream.Models.ConsumerConfig,System.Threading.CancellationToken)">
            <summary>
            Creates new consumer if it doesn't exists.
            </summary>
            <param name="stream">Name of the stream to create consumer under.</param>
            <param name="config">Consumer configuration.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving data from the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">Ack policy is set to <c>none</c> or there was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.UpdateConsumerAsync(System.String,NATS.Client.JetStream.Models.ConsumerConfig,System.Threading.CancellationToken)">
            <summary>
            Update consumer exists consumer
            </summary>
            <param name="stream">Name of the stream to update consumer under.</param>
            <param name="config">Consumer configuration.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving data from the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">Ack policy is set to <c>none</c> or there was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.GetConsumerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets consumer information from the server and creates a NATS JetStream consumer <see cref="T:NATS.Client.JetStream.NatsJSConsumer"/>.
            </summary>
            <param name="stream">Stream name where consumer is associated to.</param>
            <param name="consumer">Consumer name.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving data from the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.ListConsumersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates through consumers belonging to a stream.
            </summary>
            <param name="stream">Stream name the consumers belong to.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable of consumer info objects. Can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.ListConsumerNamesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates through consumer names belonging to a stream.
            </summary>
            <param name="stream">Stream name the consumers belong to.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable of consumer info objects. Can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.DeleteConsumerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a consumer from a stream.
            </summary>
            <param name="stream">Stream name where consumer is associated to.</param>
            <param name="consumer">Consumer name to be deleted.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether the deletion was successful.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.PauseConsumerAsync(System.String,System.String,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Pause a consumer.
            </summary>
            <param name="stream">Stream name where consumer is associated to.</param>
            <param name="consumer">Consumer name to be paused.</param>
            <param name="pauseUntil">Until when the consumer should be paused.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Result of pausing the consumer.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.ResumeConsumerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Resume a (paused) consumer.
            </summary>
            <param name="stream">Stream name where consumer is associated to.</param>
            <param name="consumer">Consumer name to be resumed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Result of resuming the (paused) consumer.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Calls JetStream Account Info API.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The account information based on the NATS connection credentials.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.PublishAsync``1(System.String,``0,NATS.Client.Core.INatsSerialize{``0},NATS.Client.JetStream.NatsJSPubOpts,NATS.Client.Core.NatsHeaders,System.Threading.CancellationToken)">
            <summary>
            Sends data to a stream associated with the subject.
            </summary>
            <param name="subject">Subject to publish the data to.</param>
            <param name="data">Data to publish.</param>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="opts">Publish options.</param>
            <param name="headers">Optional message headers.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the publishing call or the wait for response.</param>
            <typeparam name="T">Type of the data being sent.</typeparam>
            <returns>
            The ACK response to indicate if stream accepted the message as well as additional
            information like the sequence number of the message stored by the stream.
            </returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was a problem receiving the response.</exception>
            <remarks>
            <para>
            Note that if the subject isn't backed by a stream or the connected NATS server
            isn't running with JetStream enabled, this call will hang waiting for an ACK
            until the request times out.
            </para>
            </remarks>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.CreateStreamAsync(NATS.Client.JetStream.Models.StreamConfig,System.Threading.CancellationToken)">
            <summary>
            Creates a new stream if it doesn't exist or returns an existing stream with the same name.
            </summary>
            <param name="config">Stream configuration request to be sent to NATS JetStream server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream stream object which can be used to manage the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.DeleteStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a stream.
            </summary>
            <param name="stream">Stream name to be deleted.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether delete was successful or not.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.PurgeStreamAsync(System.String,NATS.Client.JetStream.Models.StreamPurgeRequest,System.Threading.CancellationToken)">
            <summary>
            Purges all of the (or filtered) data in a stream, leaves the stream.
            </summary>
            <param name="stream">Stream name to be purged.</param>
            <param name="request">Purge request.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Purge response</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.DeleteMessageAsync(System.String,NATS.Client.JetStream.Models.StreamMsgDeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a message from a stream.
            </summary>
            <param name="stream">Stream name to delete message from.</param>
            <param name="request">Delete message request.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Delete message response</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.GetStreamAsync(System.String,NATS.Client.JetStream.Models.StreamInfoRequest,System.Threading.CancellationToken)">
            <summary>
            Get stream information from the server and creates a NATS JetStream stream object <see cref="T:NATS.Client.JetStream.NatsJSStream"/>.
            </summary>
            <param name="stream">Name of the stream to retrieve.</param>
            <param name="request">Stream info request options</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream stream object which can be used to manage the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.UpdateStreamAsync(NATS.Client.JetStream.Models.StreamConfig,System.Threading.CancellationToken)">
            <summary>
            Update a NATS JetStream stream's properties.
            </summary>
            <param name="request">Stream update request object to be sent to NATS JetStream server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The updated NATS JetStream stream object.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.ListStreamsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates through the streams exists on the NATS JetStream server.
            </summary>
            <param name="subject">Limit the list to streams matching this subject filter.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable of stream objects. Can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.ListStreamNamesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List stream names.
            </summary>
            <param name="subject">Limit the list to streams matching this subject filter.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable list of stream names to be used in a <c>await foreach</c> loop.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.NewBaseInbox">
            <summary>
            Generates a new base inbox string using the connection's inbox prefix.
            </summary>
            <returns>A new inbox string.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSContext.JSRequestResponseAsync``2(System.String,``0,System.Threading.CancellationToken)">
            <summary>
            Sends a request message to a JetStream subject and waits for a response.
            </summary>
            <param name="subject">The JetStream API subject to send the request to.</param>
            <param name="request">The request message object.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <typeparam name="TRequest">The type of the request message.</typeparam>
            <typeparam name="TResponse">The type of the response message.</typeparam>
            <returns>A task representing the asynchronous operation, with a result of type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSStream.Info">
            <summary>
            Stream info object as retrieved from NATS JetStream server at the time this object was created, updated or refreshed.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Delete this stream.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether delete was successful or not.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <remarks>After deletion this object can't be used anymore.</remarks>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.PurgeAsync(NATS.Client.JetStream.Models.StreamPurgeRequest,System.Threading.CancellationToken)">
            <summary>
            Purge data from this stream. Leaves the stream.
            </summary>
            <param name="request">Purge request.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether delete was successful or not.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <remarks>After deletion this object can't be used anymore.</remarks>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.DeleteMessageAsync(NATS.Client.JetStream.Models.StreamMsgDeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a message from a stream.
            </summary>
            <param name="request">Delete message request.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Delete message response</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.UpdateAsync(NATS.Client.JetStream.Models.StreamConfig,System.Threading.CancellationToken)">
            <summary>
            Update stream properties on the server.
            </summary>
            <param name="request">Stream update request to be sent to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.CreateOrUpdateConsumerAsync(NATS.Client.JetStream.Models.ConsumerConfig,System.Threading.CancellationToken)">
            <summary>
            Creates new consumer if it doesn't exists or updates an existing one with the same name.
            </summary>
            <param name="config">Consumer configuration.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving data from the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">Ack policy is set to <c>none</c> or there is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.GetConsumerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets consumer information from the server and creates a NATS JetStream consumer <see cref="T:NATS.Client.JetStream.NatsJSConsumer"/>.
            </summary>
            <param name="consumer">Consumer name.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving data from the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.ListConsumersAsync(System.Threading.CancellationToken)">
            <summary>
            Enumerates through consumers belonging to this stream.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable of consumer objects. Can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.ListConsumerNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Enumerates through consumers names belonging to this stream.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable of consumer names. Can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.DeleteConsumerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a consumer from this stream.
            </summary>
            <param name="consumer">Consumer name to be deleted.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether the deletion was successful.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSStream.RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the stream info from the server and update this stream.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="F:NATS.Client.JetStream.Internal.NatsJSOrderedPushConsumerOpts.Default">
            <summary>
            Default watch options
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Internal.NatsJSOrderedPushConsumerOpts.IdleHeartbeat">
            <summary>
            Idle heartbeat interval
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Internal.NatsJSResponse`1">
            <summary>
            JetStream response including an optional error property encapsulating both successful and failed calls.
            </summary>
            <typeparam name="T">JetStream response type</typeparam>
        </member>
        <member name="T:NATS.Client.JetStream.Models.AccountInfoResponse">
            <summary>
            A response from the JetStream $JS.API.INFO API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountLimits.MaxMemory">
            <summary>
            The maximum amount of Memory storage Stream Messages may consume
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountLimits.MaxStorage">
            <summary>
            The maximum amount of File storage Stream Messages may consume
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountLimits.MaxStreams">
            <summary>
            The maximum number of Streams an account can create
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountLimits.MaxConsumers">
            <summary>
            The maximum number of Consumer an account can create
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountLimits.MaxBytesRequired">
            <summary>
            Indicates if Streams created in this account requires the max_bytes property set
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountLimits.MaxAckPending">
            <summary>
            The maximum number of outstanding ACKs any consumer may configure
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountLimits.MemoryMaxStreamBytes">
            <summary>
            The maximum size any single memory stream may be
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountLimits.StorageMaxStreamBytes">
            <summary>
            The maximum size any single storage based stream may be
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.AccountPurgeResponse">
            <summary>
            A response from the JetStream $JS.API.ACCOUNT.PURGE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountPurgeResponse.Initiated">
            <summary>
            If the purge operation was successfully started
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountStats.Memory">
            <summary>
            Memory Storage being used for Stream Message storage
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountStats.Storage">
            <summary>
            File Storage being used for Stream Message storage
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountStats.Streams">
            <summary>
            Number of active Streams
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountStats.Consumers">
            <summary>
            Number of active Consumers
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.AccountStats.Domain">
            <summary>
            The JetStream domain this account is in
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ApiError.Code">
            <summary>
            HTTP like error code in the 300 to 500 range
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ApiError.Description">
            <summary>
            A human friendly description of the error
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ApiError.ErrCode">
            <summary>
            The NATS error code unique to each kind of error
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ApiStats.Total">
            <summary>
            Total number of API requests received for this account
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ApiStats.Errors">
            <summary>
            API requests that resulted in an error response
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ClusterInfo.Name">
            <summary>
            The cluster name
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ClusterInfo.Leader">
            <summary>
            The server name of the RAFT leader
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ClusterInfo.Replicas">
            <summary>
            The members of the RAFT cluster
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.Models.ConsumerConfig.#ctor">
            <summary>
            Create an ephemeral consumer configuration.
            </summary>
            <remarks>
            When <c>DurableName</c> is not specified, the consumer is ephemeral.
            This default constructor doesn't set any properties explicitly.
            </remarks>
        </member>
        <member name="M:NATS.Client.JetStream.Models.ConsumerConfig.#ctor(System.String)">
            <summary>
            Create a durable consumer configuration.
            </summary>
            <param name="name">Durable name</param>
            <remarks>
            To create a durable consumer, the properties <c>Name</c> and <c>DurableName</c>
            must be specified. You must also specify the <c>AckPolicy</c> as other than <c>None</c>.
            This constructor sets the <c>Name</c> and <c>DurableName</c> to the same value specified
            in <paramref name="name"/> parameter and sets the <c>AckPolicy</c> to <c>Explicit</c>.
            </remarks>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.DurableName">
            <summary>
            A unique name for a durable consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.Name">
            <summary>
            A unique name for a consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.Description">
            <summary>
            A short description of the purpose of this consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.AckWait">
            <summary>
            How long (in nanoseconds) to allow messages to remain un-acknowledged before attempting redelivery
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.MaxDeliver">
            <summary>
            The number of times a message will be redelivered to consumers if not acknowledged in time
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.FilterSubject">
            <summary>
            Filter the stream by a single subjects
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.FilterSubjects">
            <summary>
            Filter the stream by multiple subjects
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.RateLimitBps">
            <summary>
            The rate at which messages will be delivered to clients, expressed in bit per second
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.MaxAckPending">
            <summary>
            The maximum number of messages without acknowledgement that can be outstanding, once this limit is reached message delivery will be suspended
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.IdleHeartbeat">
            <summary>
            If the Consumer is idle for more than this many nano seconds a empty message with Status header 100 will be sent indicating the consumer is still alive
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.FlowControl">
            <summary>
            For push consumers this will regularly send an empty mess with Status header 100 and a reply subject, consumers must reply to these messages to control the rate of message delivery
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.MaxWaiting">
            <summary>
            The number of pulls that can be outstanding on a pull consumer, pulls received after this is reached are ignored
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.Direct">
            <summary>
            Creates a special consumer that does not touch the Raft layers, not for general use by clients, internal use only
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.HeadersOnly">
            <summary>
            Delivers only the headers of messages in the stream and not the bodies. Additionally adds Nats-Msg-Size header to indicate the size of the removed payload
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.MaxBatch">
            <summary>
            The largest batch property that may be specified when doing a pull on a Pull Consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.MaxExpires">
            <summary>
            The maximum expires value that may be set when doing a pull on a Pull Consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.MaxBytes">
            <summary>
            The maximum bytes value that maybe set when dong a pull on a Pull Consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.InactiveThreshold">
            <summary>
            Duration that instructs the server to cleanup ephemeral consumers that are inactive for that long
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.Backoff">
            <summary>
            List of durations in Go format that represents a retry time scale for NaK'd messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.NumReplicas">
            <summary>
            When set do not inherit the replica count from the stream but specifically set it to this amount
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.PauseUntil">
            <summary>
            If the consumer is paused, this contains until which time it is paused.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.MemStorage">
            <summary>
            Force the consumer state to be kept in memory rather than inherit the setting from the stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerConfig.Metadata">
            <summary>
            Additional metadata for the Consumer
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerCreateRequest">
            <summary>
            A request to the JetStream $JS.API.CONSUMER.CREATE and $JS.API.CONSUMER.DURABLE.CREATE APIs
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerCreateRequest.StreamName">
            <summary>
            The name of the stream to create the consumer in
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerCreateRequest.Config">
            <summary>
            The consumer configuration
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerCreateResponse">
            <summary>
            A response from the JetStream $JS.API.CONSUMER.CREATE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerDeleteResponse">
            <summary>
            A response from the JetStream $JS.API.CONSUMER.DELETE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerGetnextRequest">
            <summary>
            A request to the JetStream $JS.API.CONSUMER.MSG.NEXT API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerGetnextRequest.Expires">
            <summary>
            A duration from now when the pull should expire, stated in nanoseconds, 0 for no expiry
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerGetnextRequest.Batch">
            <summary>
            How many messages the server should deliver to the requestor
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerGetnextRequest.MaxBytes">
            <summary>
            Sends at most this many bytes to the requestor, limited by consumer configuration max_bytes
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerGetnextRequest.NoWait">
            <summary>
            When true a response with a 404 status header will be returned when no messages are available
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerGetnextRequest.IdleHeartbeat">
            <summary>
            When not 0 idle heartbeats will be sent on this interval
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.StreamName">
            <summary>
            The Stream the consumer belongs to
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.Name">
            <summary>
            A unique name for the consumer, either machine generated or the durable name
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.Ts">
            <summary>
            The server time the consumer info was created
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.Created">
            <summary>
            The time the Consumer was created
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.Delivered">
            <summary>
            The last message delivered from this Consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.AckFloor">
            <summary>
            The highest contiguous acknowledged message
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.NumAckPending">
            <summary>
            The number of messages pending acknowledgement
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.NumRedelivered">
            <summary>
            The number of redeliveries that have been performed
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.NumWaiting">
            <summary>
            The number of pull consumers waiting for messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.NumPending">
            <summary>
            The number of messages left unconsumed in this Consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.IsPaused">
            <summary>
            Whether the consumer is paused.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.PauseRemaining">
            <summary>
            If the consumer is <see cref="P:NATS.Client.JetStream.Models.ConsumerInfo.IsPaused"/>, this contains how much time is remaining until this consumer is unpaused.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerInfo.PushBound">
            <summary>
            Indicates if any client is connected and receiving messages from a push consumer
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerInfoResponse">
            <summary>
            A response from the JetStream $JS.API.CONSUMER.INFO API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerLeaderStepdownResponse">
            <summary>
            A response from the JetStream $JS.API.CONSUMER.LEADER.STEPDOWN API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerLeaderStepdownResponse.Success">
            <summary>
            If the leader successfully stood down
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerListRequest">
            <summary>
            A request to the JetStream $JS.API.CONSUMER.LIST API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerListResponse">
            <summary>
            A response from the JetStream $JS.API.CONSUMER.LIST API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerListResponse.Consumers">
            <summary>
            Full Consumer information for each known Consumer
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerNamesRequest">
            <summary>
            A request to the JetStream $JS.API.CONSUMER.NAMES API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ConsumerNamesRequest.Subject">
            <summary>
            Filter the names to those consuming messages matching this subject or wildcard
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerNamesResponse">
            <summary>
            A response from the JetStream $JS.API.CONSUMER.NAMES API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerPauseRequest">
            <summary>
            A request to the JetStream $JS.API.CONSUMER.PAUSE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ConsumerPauseResponse">
            <summary>
            A response from the JetStream $JS.API.CONSUMER.PAUSE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.ExternalStreamSource">
            <summary>
            Configuration referencing a stream source in another account or JetStream domain
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ExternalStreamSource.Api">
            <summary>
            The subject prefix that imports the other account/domain $JS.API.CONSUMER.&gt; subjects
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.ExternalStreamSource.Deliver">
            <summary>
            The delivery subject to use for the push consumer
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.LostStreamData">
            <summary>
            Records messages that were damaged and unrecoverable
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.LostStreamData.Msgs">
            <summary>
            The messages that were lost
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.LostStreamData.Bytes">
            <summary>
            The number of bytes that were lost
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.MetaLeaderStepdownRequest">
            <summary>
            A request to the JetStream $JS.API.META.LEADER.STEPDOWN API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.MetaLeaderStepdownResponse">
            <summary>
            A response from the JetStream $JS.API.META.LEADER.STEPDOWN API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.MetaLeaderStepdownResponse.Success">
            <summary>
            If the leader successfully stood down
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.MetaServerRemoveRequest">
            <summary>
            A request to the JetStream $JS.API.SERVER.REMOVE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.MetaServerRemoveRequest.Peer">
            <summary>
            The Name of the server to remove from the meta group
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.MetaServerRemoveRequest.PeerId">
            <summary>
            Peer ID of the peer to be removed. If specified this is used instead of the server name
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.MetaServerRemoveResponse">
            <summary>
            A response from the JetStream $JS.API.SERVER.REMOVE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.MetaServerRemoveResponse.Success">
            <summary>
            If the peer was successfully removed
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PeerInfo.Name">
            <summary>
            The server name of the peer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PeerInfo.Current">
            <summary>
            Indicates if the server is up to date and synchronised
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PeerInfo.Active">
            <summary>
            Nanoseconds since this peer was last seen
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PeerInfo.Offline">
            <summary>
            Indicates the node is considered offline by the group
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PeerInfo.Lag">
            <summary>
            How many uncommitted operations this peer is behind the leader
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.Placement">
            <summary>
            Placement requirements for a stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Placement.Cluster">
            <summary>
            The desired cluster name to place the stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Placement.Tags">
            <summary>
            Tags required on servers hosting this stream
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.PubAckResponse">
            <summary>
            A response received when publishing a message
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PubAckResponse.Stream">
            <summary>
            The name of the stream that received the message
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PubAckResponse.Seq">
            <summary>
            If successful this will be the sequence the message is stored at
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PubAckResponse.Duplicate">
            <summary>
            Indicates that the message was not stored due to the Nats-Msg-Id header and duplicate tracking
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.PubAckResponse.Domain">
            <summary>
            If the Stream accepting the message is in a JetStream server configured for a domain this would be that domain
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.Republish">
            <summary>
            Rules for republishing messages from a stream with subject mapping onto new subjects for partitioning and more
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Republish.Src">
            <summary>
            The source subject to republish
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Republish.Dest">
            <summary>
            The destination to publish to
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Republish.HeadersOnly">
            <summary>
            Only send message headers, no bodies
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.SequenceInfo.ConsumerSeq">
            <summary>
            The sequence number of the Consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.SequenceInfo.StreamSeq">
            <summary>
            The sequence number of the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.SequenceInfo.LastActive">
            <summary>
            The last time a message was delivered or acknowledged (for ack_floor)
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.SequencePair.ConsumerSeq">
            <summary>
            The sequence number of the Consumer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.SequencePair.StreamSeq">
            <summary>
            The sequence number of the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StoredMessage.Subject">
            <summary>
            The subject the message was originally received on
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StoredMessage.Seq">
            <summary>
            The sequence number of the message in the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StoredMessage.Data">
            <summary>
            The base64 encoded payload of the message body
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StoredMessage.Time">
            <summary>
            The time the message was received
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StoredMessage.Hdrs">
            <summary>
            Base64 encoded headers for the message
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamAlternate">
            <summary>
            An alternate location to read mirrored data
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamAlternate.Name">
            <summary>
            The mirror stream name
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamAlternate.Cluster">
            <summary>
            The name of the cluster holding the stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamAlternate.Domain">
            <summary>
            The domain holding the string
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Name">
            <summary>
            A unique name for the Stream, empty for Stream Templates.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Description">
            <summary>
            A short description of the purpose of this stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Subjects">
            <summary>
            A list of subjects to consume, supports wildcards. Must be empty when a mirror is configured. May be empty when sources are configured.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.SubjectTransform">
            <summary>
            Subject transform to apply to matching messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Retention">
            <summary>
            How messages are retained in the Stream, once this is exceeded old messages are removed.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.MaxConsumers">
            <summary>
            How many Consumers can be defined for a given Stream. -1 for unlimited.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.MaxMsgs">
            <summary>
            How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.MaxMsgsPerSubject">
            <summary>
            For wildcard streams ensure that for every unique subject this many messages are kept - a per subject retention limit
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.MaxBytes">
            <summary>
            How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.MaxAge">
            <summary>
            Maximum age of any message in the stream, expressed in nanoseconds. 0 for unlimited.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.MaxMsgSize">
            <summary>
            The largest message that will be accepted by the Stream. -1 for unlimited.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Storage">
            <summary>
            The storage backend to use for the Stream.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Compression">
            <summary>
            Optional compression algorithm used for the Stream.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.NumReplicas">
            <summary>
            How many replicas to keep for each message.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.NoAck">
            <summary>
            Disables acknowledging messages that are received by the Stream.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.TemplateOwner">
            <summary>
            When the Stream is managed by a Stream Template this identifies the template that manages the Stream.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Discard">
            <summary>
            When a Stream reach it's limits either old messages are deleted or new ones are denied
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.DuplicateWindow">
            <summary>
            The time window to track duplicate messages for, expressed in nanoseconds. 0 for default
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Placement">
            <summary>
            Placement directives to consider when placing replicas of this stream, random placement when unset
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Mirror">
            <summary>
            Maintains a 1:1 mirror of another stream with name matching this property.  When a mirror is configured subjects and sources must be empty.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Sources">
            <summary>
            List of Stream names to replicate into this Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Sealed">
            <summary>
            Sealed streams do not allow messages to be deleted via limits or API, sealed streams can not be unsealed via configuration update. Can only be set on already created streams via the Update API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.DenyDelete">
            <summary>
            Restricts the ability to delete messages from a stream via the API. Cannot be changed once set to true
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.DenyPurge">
            <summary>
            Restricts the ability to purge messages from a stream via the API. Cannot be change once set to true
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.AllowRollupHdrs">
            <summary>
            Allows the use of the Nats-Rollup header to replace all contents of a stream, or subject in a stream, with a single new message
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.AllowDirect">
            <summary>
            Allow higher performance, direct access to get individual messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.MirrorDirect">
            <summary>
            Allow higher performance, direct access for mirrors as well
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.DiscardNewPerSubject">
            <summary>
            When discard policy is new and the stream is one with max messages per subject set, this will apply the new behavior to every subject. Essentially turning discard new from maximum number of subjects into maximum number of messages in a subject.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamConfig.Metadata">
            <summary>
            Additional metadata for the Stream
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamCreateResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.CREATE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamDeleteResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.DELETE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfo.Config">
            <summary>
            The active configuration for the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfo.State">
            <summary>
            Detail about the current State of the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfo.Created">
            <summary>
            Timestamp when the stream was created
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfo.Ts">
            <summary>
            The server time the stream info was created
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfo.Sources">
            <summary>
            Streams being sourced into this Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfo.Alternates">
            <summary>
            List of mirrors sorted by priority
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamInfoRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.INFO API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfoRequest.DeletedDetails">
            <summary>
            When true will result in a full list of deleted message IDs being returned in the info response
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfoRequest.SubjectsFilter">
            <summary>
            When set will return a list of subjects and how many messages they hold for all matching subjects. Filter is a standard NATS subject wildcard pattern.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamInfoRequest.Offset">
            <summary>
            Paging offset when retrieving pages of subject details
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamInfoResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.INFO API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamLeaderStepdownResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.LEADER.STEPDOWN API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamLeaderStepdownResponse.Success">
            <summary>
            If the leader successfully stood down
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamListRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.LIST API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamListRequest.Subject">
            <summary>
            Limit the list to streams matching this subject filter
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamListResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.LIST API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamListResponse.Streams">
            <summary>
            Full Stream information for each known Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamListResponse.Missing">
            <summary>
            In clustered environments gathering Stream info might time out, this list would be a list of Streams for which information was not obtainable
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamMsgDeleteRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.MSG.DELETE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamMsgDeleteRequest.Seq">
            <summary>
            Stream sequence number of the message to delete
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamMsgDeleteRequest.NoErase">
            <summary>
            Default will securely remove a message and rewrite the data with random data, set this to true to only remove the message
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamMsgDeleteResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.MSG.DELETE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamMsgGetRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.MSG.GET API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamMsgGetRequest.Seq">
            <summary>
            Stream sequence number of the message to retrieve, cannot be combined with last_by_subj
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamMsgGetRequest.LastBySubj">
            <summary>
            Retrieves the last message for a given subject, cannot be combined with seq
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamMsgGetRequest.NextBySubj">
            <summary>
            Combined with sequence gets the next message for a subject with the given sequence or higher
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamMsgGetResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.MSG.GET API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamNamesRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.NAMES API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamNamesRequest.Subject">
            <summary>
            Limit the list to streams matching this subject filter
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamNamesResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.NAMES API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamPurgeRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.PURGE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamPurgeRequest.Filter">
            <summary>
            Restrict purging to messages that match this subject
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamPurgeRequest.Seq">
            <summary>
            Purge all messages up to but not including the message with this sequence. Can be combined with subject filter but not the keep option
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamPurgeRequest.Keep">
            <summary>
            Ensures this many messages are present after the purge. Can be combined with the subject filter but not the sequence
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamPurgeResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.PURGE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamPurgeResponse.Purged">
            <summary>
            Number of messages purged from the Stream
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamRemovePeerRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.PEER.REMOVE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamRemovePeerRequest.Peer">
            <summary>
            Server name of the peer to remove
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamRemovePeerResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.PEER.REMOVE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamRemovePeerResponse.Success">
            <summary>
            If the peer was successfully removed
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamRestoreRequest">
            <summary>
            A response from the JetStream $JS.API.STREAM.RESTORE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamRestoreResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.RESTORE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamRestoreResponse.DeliverSubject">
            <summary>
            The Subject to send restore chunks to
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamSnapshotRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.SNAPSHOT API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSnapshotRequest.DeliverSubject">
            <summary>
            The NATS subject where the snapshot will be delivered
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSnapshotRequest.NoConsumers">
            <summary>
            When true consumer states and configurations will not be present in the snapshot
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSnapshotRequest.ChunkSize">
            <summary>
            The size of data chunks to send to deliver_subject
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSnapshotRequest.Jsck">
            <summary>
            Check all message's checksums prior to snapshot
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamSnapshotResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.SNAPSHOT API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamSource">
            <summary>
            Defines a source where streams should be replicated from
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSource.Name">
            <summary>
            Stream name
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSource.OptStartSeq">
            <summary>
            Sequence to start replicating from
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSource.OptStartTime">
            <summary>
            Time stamp to start replicating from
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSource.FilterSubject">
            <summary>
            Replicate only a subset of messages based on filter
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSource.SubjectTransforms">
            <summary>
            Subject transforms to apply to matching messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSource.Domain">
            <summary>
            This field is a convenience for setting up an ExternalStream.
            If set, the value here is used to calculate the JetStreamAPI prefix.
            This field is never serialized to the server. This value cannot be set
            if external is set.
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamSourceInfo">
            <summary>
            Information about an upstream stream source in a mirror
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSourceInfo.Name">
            <summary>
            The name of the Stream being replicated
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSourceInfo.FilterSubject">
            <summary>
            The subject filter to apply to the messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSourceInfo.SubjectTransformDest">
            <summary>
            The subject transform destination to apply to the messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSourceInfo.Lag">
            <summary>
            How many messages behind the mirror operation is
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamSourceInfo.Active">
            <summary>
            When last the mirror had activity, in nanoseconds. Value will be -1 when there has been no activity.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.Messages">
            <summary>
            Number of messages stored in the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.Bytes">
            <summary>
            Combined size of all messages in the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.FirstSeq">
            <summary>
            Sequence number of the first message in the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.FirstTs">
            <summary>
            The timestamp of the first message in the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.LastSeq">
            <summary>
            Sequence number of the last message in the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.LastTs">
            <summary>
            The timestamp of the last message in the Stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.Deleted">
            <summary>
            IDs of messages that were deleted using the Message Delete API or Interest based streams removing messages out of order
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.Subjects">
            <summary>
            Subjects and their message counts when a subjects_filter was set
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.NumSubjects">
            <summary>
            The number of unique subjects held in the stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.NumDeleted">
            <summary>
            The number of deleted messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamState.ConsumerCount">
            <summary>
            Number of Consumers attached to the Stream
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamTemplateConfig">
            <summary>
            The data structure that describe the configuration of a NATS JetStream Stream Template
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamTemplateConfig.Name">
            <summary>
            A unique name for the Stream Template.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamTemplateConfig.MaxStreams">
            <summary>
            The maximum number of Streams this Template can create, -1 for unlimited.
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamTemplateCreateRequest">
            <summary>
            A request to the JetStream $JS.API.STREAM.TEMPLATE.CREATE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamTemplateCreateResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.TEMPLATE.CREATE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamTemplateDeleteResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.TEMPLATE.DELETE API
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.StreamTemplateInfo.Streams">
            <summary>
            List of Streams managed by this Template
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamTemplateInfoResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.TEMPLATE.INFO API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamTemplateNamesRequest">
            <summary>
            A request to the JetStream $JS.API.CONSUMER.LIST API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamTemplateNamesResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.TEMPLATE.NAMES API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.StreamUpdateResponse">
            <summary>
            A response from the JetStream $JS.API.STREAM.UPDATE API
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.Models.SubjectTransform">
            <summary>
            Subject transform to apply to matching messages going into the stream
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.SubjectTransform.Src">
            <summary>
            The subject transform source
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.SubjectTransform.Dest">
            <summary>
            The subject transform destination
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Tier.Memory">
            <summary>
            Memory Storage being used for Stream Message storage
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Tier.Storage">
            <summary>
            File Storage being used for Stream Message storage
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Tier.Streams">
            <summary>
            Number of active Streams
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.Models.Tier.Consumers">
            <summary>
            Number of active Consumers
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSConsumer">
            <summary>
            Represents a NATS JetStream consumer.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSConsumer.Info">
            <summary>
            Consumer info object as retrieved from NATS JetStream server at the time this object was created, updated or refreshed.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSConsumer.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Delete this consumer.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether delete was successful or not.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <remarks>After deletion this object can't be used anymore.</remarks>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error sending the message or this consumer object isn't valid anymore because it was deleted earlier.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSConsumer.ConsumeAsync``1(NATS.Client.Core.INatsDeserialize{``0},NATS.Client.JetStream.NatsJSConsumeOpts,System.Threading.CancellationToken)">
            <summary>
            Starts an enumerator consuming messages from the stream using this consumer.
            </summary>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="opts">Consume options. (default: <c>MaxMsgs</c> 1,000)</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <typeparam name="T">Message type to deserialize.</typeparam>
            <returns>Async enumerable of messages which can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSProtocolException">Consumer is deleted, it's push based or request sent to server is invalid.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSConsumer.NextAsync``1(NATS.Client.Core.INatsDeserialize{``0},NATS.Client.JetStream.NatsJSNextOpts,System.Threading.CancellationToken)">
            <summary>
            Consume a single message from the stream using this consumer.
            </summary>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="opts">Next message options. (default: 30 seconds timeout)</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <typeparam name="T">Message type to deserialize.</typeparam>
            <returns>Message retrieved from the stream or <c>NULL</c></returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSProtocolException">Consumer is deleted, it's push based or request sent to server is invalid.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error sending the message or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <remarks>
            <para>
            If the request to server expires (in 30 seconds by default) this call returns <c>NULL</c>.
            </para>
            <para>
            This method is implemented as a fetch with <c>MaxMsgs=1</c> which means every request will create a new subscription
            on the NATS server. This would be inefficient if you're consuming a lot of messages and you should consider using
            fetch or consume methods.
            </para>
            </remarks>
            <example>
            The following example shows how you might process messages:
            <code lang="C#">
            var next = await consumer.NextAsync&lt;Data&gt;();
            if (next is { } msg)
            {
                // process the message
                await msg.AckAsync();
            }
            </code>
            </example>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSConsumer.FetchAsync``1(NATS.Client.JetStream.NatsJSFetchOpts,NATS.Client.Core.INatsDeserialize{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSConsumer.FetchNoWaitAsync``1(NATS.Client.JetStream.NatsJSFetchOpts,NATS.Client.Core.INatsDeserialize{``0},System.Threading.CancellationToken)">
             <summary>
             Consume a set number of messages from the stream using this consumer.
             Returns immediately if no messages are available.
             </summary>
             <param name="serializer">Serializer to use for the message type.</param>
             <param name="opts">Fetch options. (default: <c>MaxMsgs</c> 1,000 and timeout is ignored)</param>
             <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
             <typeparam name="T">Message type to deserialize.</typeparam>
             <returns>Async enumerable of messages which can be used in a <c>await foreach</c> loop.</returns>
             <exception cref="T:NATS.Client.JetStream.NatsJSProtocolException">Consumer is deleted, it's push based or request sent to server is invalid.</exception>
             <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error sending the message or this consumer object isn't valid anymore because it was deleted earlier.</exception>
             <remarks>
             <para>
             This method will return immediately if no messages are available.
             </para>
             <para>
             Using this method is discouraged because it might create an unnecessary load on your cluster.
             Use <c>Consume</c> or <c>Fetch</c> instead.
             </para>
             </remarks>
             <example>
             <para>
             However, there are scenarios where this method is useful. For example if your application is
             processing messages in batches infrequently (for example every 5 minutes) you might want to
             consider <c>FetchNoWait</c>. You must make sure to count your messages and stop fetching
             if you received all of them in one call, meaning when <c>count &lt; MaxMsgs</c>.
             </para>
             <code>
             const int max = 10;
             var count = 0;
            
             await foreach (var msg in consumer.FetchAllNoWaitAsync&lt;int&gt;(new NatsJSFetchOpts { MaxMsgs = max }))
             {
                 count++;
                 Process(msg);
                 await msg.AckAsync();
             }
            
             if (count &lt; max)
             {
                 // No more messages. Pause for more.
                 await Task.Delay(TimeSpan.FromMinutes(5));
             }
             </code>
             </example>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSConsumer.RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the consumer info from the server and update this consumer.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSContext">
            <summary>Provides management and access to NATS JetStream streams and consumers.</summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.CreateOrderedConsumerAsync(System.String,NATS.Client.JetStream.NatsJSOrderedConsumerOpts,System.Threading.CancellationToken)">
            <summary>
            Creates new ordered consumer.
            </summary>
            <param name="stream">Stream name to create the consumer under.</param>
            <param name="opts">Ordered consumer options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving ordered data from the stream.</returns>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.CreateOrUpdateConsumerAsync(System.String,NATS.Client.JetStream.Models.ConsumerConfig,System.Threading.CancellationToken)">
            <inheritdoc />>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.GetConsumerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets consumer information from the server and creates a NATS JetStream consumer <see cref="T:NATS.Client.JetStream.NatsJSConsumer"/>.
            </summary>
            <param name="stream">Stream name where consumer is associated to.</param>
            <param name="consumer">Consumer name.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving data from the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.ListConsumersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.ListConsumerNamesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.DeleteConsumerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a consumer from a stream.
            </summary>
            <param name="stream">Stream name where consumer is associated to.</param>
            <param name="consumer">Consumer name to be deleted.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether the deletion was successful.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.PauseConsumerAsync(System.String,System.String,System.DateTimeOffset,System.Threading.CancellationToken)">
            <summary>
            Pause a consumer.
            </summary>
            <param name="stream">Stream name where consumer is associated to.</param>
            <param name="consumer">Consumer name to be paused.</param>
            <param name="pauseUntil">Until when the consumer should be paused.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Result of pausing the consumer.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.ResumeConsumerAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Resume a (paused) consumer.
            </summary>
            <param name="stream">Stream name where consumer is associated to.</param>
            <param name="consumer">Consumer name to be resumed.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Result of resuming the (paused) consumer.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.#ctor(NATS.Client.Core.INatsConnection)">
            <inheritdoc cref="M:NATS.Client.JetStream.NatsJSContext.#ctor(NATS.Client.Core.INatsConnection,NATS.Client.JetStream.NatsJSOpts)"/>>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.#ctor(NATS.Client.Core.INatsConnection,NATS.Client.JetStream.NatsJSOpts)">
            <summary>
            Creates a NATS JetStream context used to manage and access streams and consumers.
            </summary>
            <param name="connection">A NATS server connection <see cref="T:NATS.Client.Core.NatsConnection"/> to access the JetStream APIs, publishers and consumers.</param>
            <param name="opts">Context wide <see cref="T:NATS.Client.JetStream.NatsJSOpts"/> JetStream options.</param>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSContext.Opts">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.GetAccountInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Calls JetStream Account Info API.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The account information based on the NATS connection credentials.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.PublishAsync``1(System.String,``0,NATS.Client.Core.INatsSerialize{``0},NATS.Client.JetStream.NatsJSPubOpts,NATS.Client.Core.NatsHeaders,System.Threading.CancellationToken)">
            <summary>
            Sends data to a stream associated with the subject.
            </summary>
            <param name="subject">Subject to publish the data to.</param>
            <param name="data">Data to publish.</param>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="opts">Publish options.</param>
            <param name="headers">Optional message headers.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the publishing call or the wait for response.</param>
            <typeparam name="T">Type of the data being sent.</typeparam>
            <returns>
            The ACK response to indicate if stream accepted the message as well as additional
            information like the sequence number of the message stored by the stream.
            </returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was a problem receiving the response.</exception>
            <remarks>
            <para>
            Note that if the subject isn't backed by a stream or the connected NATS server
            isn't running with JetStream enabled, this call will hang waiting for an ACK
            until the request times out.
            </para>
            <para>
            By setting <c>msgId</c> you can ensure messages written to a stream only once. JetStream support idempotent
            message writes by ignoring duplicate messages as indicated by the Nats-Msg-Id header. If both <c>msgId</c>
            and the <c>Nats-Msg-Id</c> header value was set, <c>msgId</c> parameter value will be used.
            </para>
            </remarks>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.NewBaseInbox">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.JSRequestResponseAsync``2(System.String,``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.CreateStreamAsync(NATS.Client.JetStream.Models.StreamConfig,System.Threading.CancellationToken)">
            <summary>
            Creates a new stream if it doesn't exist or returns an existing stream with the same name.
            </summary>
            <param name="config">Stream configuration request to be sent to NATS JetStream server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream stream object which can be used to manage the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The stream name in <paramref name="config"/> is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The name in <paramref name="config"/> is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.DeleteStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a stream.
            </summary>
            <param name="stream">Stream name to be deleted.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether delete was successful or not.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.PurgeStreamAsync(System.String,NATS.Client.JetStream.Models.StreamPurgeRequest,System.Threading.CancellationToken)">
            <summary>
            Purges all of the (or filtered) data in a stream, leaves the stream.
            </summary>
            <param name="stream">Stream name to be purged.</param>
            <param name="request">Purge request.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Purge response</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.DeleteMessageAsync(System.String,NATS.Client.JetStream.Models.StreamMsgDeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a message from a stream.
            </summary>
            <param name="stream">Stream name to delete message from.</param>
            <param name="request">Delete message request.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Delete message response</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.GetStreamAsync(System.String,NATS.Client.JetStream.Models.StreamInfoRequest,System.Threading.CancellationToken)">
            <summary>
            Get stream information from the server and creates a NATS JetStream stream object <see cref="T:NATS.Client.JetStream.NatsJSStream"/>.
            </summary>
            <param name="stream">Name of the stream to retrieve.</param>
            <param name="request">Stream info request options</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream stream object which can be used to manage the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="stream"/> name is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="stream"/> name is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.UpdateStreamAsync(NATS.Client.JetStream.Models.StreamConfig,System.Threading.CancellationToken)">
            <summary>
            Update a NATS JetStream stream's properties.
            </summary>
            <param name="request">Stream update request object to be sent to NATS JetStream server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The updated NATS JetStream stream object.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:System.ArgumentException">The stream name in <paramref name="request"/> is invalid.</exception>
            <exception cref="T:System.ArgumentNullException">The name in <paramref name="request"/> is <c>null</c>.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.ListStreamsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Enumerates through the streams exists on the NATS JetStream server.
            </summary>
            <param name="subject">Limit the list to streams matching this subject filter.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable of stream objects. Can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSContext.ListStreamNamesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            List stream names.
            </summary>
            <param name="subject">Limit the list to streams matching this subject filter.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable list of stream names to be used in a <c>await foreach</c> loop.</returns>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSException">
            <summary>
            Generic JetStream exception.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSException.#ctor(System.String)">
            <summary>
            Create JetStream generic exception.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSException.#ctor(System.String,System.Exception)">
            <summary>
            Create JetStream generic exception.
            </summary>
            <param name="message">Error message.</param>
            <param name="exception">Inner exception.</param>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSProtocolException">
            <summary>
            JetStream protocol errors received during message consumption.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSProtocolException.#ctor(System.Int32,NATS.Client.Core.NatsHeaders.Messages,System.String)">
            <summary>
            Create JetStream protocol exception.
            </summary>
            <param name="headerCode">Server error code</param>
            <param name="headerMessage">Server error message enum (if defined)</param>
            <param name="headerMessageText">Server error message string</param>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSDuplicateMessageException">
            <summary>
            The exception that is thrown when JetStream publish acknowledgment indicates a duplicate sequence error.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSDuplicateMessageException.#ctor(System.UInt64)">
            <summary>
            Create JetStream duplicate message exception.
            </summary>
            <param name="sequence">The duplicate sequence number.</param>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSDuplicateMessageException.Sequence">
            <summary>
            The duplicate sequence number.
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSApiException">
            <summary>
            JetStream API call errors.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSApiException.#ctor(NATS.Client.JetStream.Models.ApiError)">
            <summary>
            Create JetStream API exception.
            </summary>
            <param name="error">Error response received from the server.</param>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSApiException.Error">
            <summary>
            API error response received from the server.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSExtensions.EnsureSuccess(NATS.Client.JetStream.Models.PubAckResponse)">
            <summary>
            Make sure acknowledgment was successful and throw an exception otherwise.
            </summary>
            <param name="ack">ACK response.</param>
            <exception cref="T:System.ArgumentNullException"><see cref="T:NATS.Client.JetStream.Models.PubAckResponse"/> is <c>NULL</c>.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSDuplicateMessageException">A message with the same <c>Nats-Msg-Id</c> was received before.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSExtensions.IsSuccess(NATS.Client.JetStream.Models.PubAckResponse)">
            <summary>
            Checks if there are no errors and message is not a duplicate.
            </summary>
            <param name="ack">ACK response.</param>
            <returns>True if there are no errors and message is not a duplicate.</returns>
            <exception cref="T:System.ArgumentNullException"><see cref="T:NATS.Client.JetStream.Models.PubAckResponse"/> is <c>NULL</c>.</exception>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.Boolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.AccountInfoResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.AccountLimits">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.AccountPurgeResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.AccountStats">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ApiError">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ApiStats">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ClusterInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerConfig">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerConfigAckPolicy">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerConfigDeliverPolicy">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerConfigReplayPolicy">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerCreateAction">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerCreateRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerCreateResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerDeleteResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerGetnextRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerInfoResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerLeaderStepdownResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerListRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerListResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerNamesRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerNamesResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerPauseRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ConsumerPauseResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ErrorResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ExternalStreamSource">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.IterableRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.IterableResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.LostStreamData">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.MetaLeaderStepdownRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.MetaLeaderStepdownResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.MetaServerRemoveRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.MetaServerRemoveResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.PeerInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.Placement">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.PubAckResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.Republish">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.SequenceInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.SequencePair">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StoredMessage">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamAlternate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamConfig">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamConfigCompression">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamConfigDiscard">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamConfigRetention">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamConfigStorage">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamCreateResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamDeleteResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamInfoRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamInfoResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamLeaderStepdownResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamListRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamListResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamMsgDeleteRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamMsgDeleteResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamMsgGetRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamMsgGetResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamNamesRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamNamesResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamPurgeRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamPurgeResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamRemovePeerRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamRemovePeerResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamRestoreRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamRestoreResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamSnapshotRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamSnapshotResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamSource">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamSourceInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamState">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamTemplateConfig">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamTemplateCreateRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamTemplateCreateResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamTemplateDeleteResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamTemplateInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamTemplateInfoResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamTemplateNamesRequest">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamTemplateNamesResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.StreamUpdateResponse">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.SubjectTransform">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.Tier">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionConsumerInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionPeerInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionStreamAlternate">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionStreamInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionStreamSource">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionStreamSourceInfo">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionSubjectTransform">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionInt64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ICollectionString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.IDictionaryStringInt64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.IDictionaryStringObject">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.IDictionaryStringString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.DateTimeOffset">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.NullableDateTimeOffset">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.ReadOnlyMemoryByte">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.TimeSpan">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.NullableTimeSpan">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.Int32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.Int64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.Object">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.UInt64">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSJsonSerializerContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSJsonSerializerContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSJsonSerializerContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSJsonSerializerContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:NATS.Client.JetStream.INatsJSMsg`1">
            <summary>
            This interface provides an optional contract when passing
            messages to processing methods which is usually helpful in
            creating test doubles in unit testing.
            </summary>
            <remarks>
            <para>
            Using this interface is optional and should not affect functionality.
            </para>
            <para>
            There is a performance penalty when using this interface because
            <see cref="T:NATS.Client.JetStream.NatsJSMsg`1"/> is a value type and boxing is required.
            A boxing allocation occurs when a value type is converted to the
            interface type. This is because the interface type is a reference
            type and the value type must be converted to a reference type.
            You should benchmark your application to determine if the
            interface is worth the performance penalty or makes any noticeable
            degradation in performance.
            </para>
            </remarks>
            <typeparam name="T">Data type of the payload</typeparam>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSMsg`1.Subject">
            <summary>
            Subject of the user message.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSMsg`1.Size">
            <summary>
            Message size in bytes.
            </summary>
            <remarks>
            Message size is calculated using the same method NATS server uses:
            <code lang="C#">
            int size = subject.Length + replyTo.Length + headers.Length + payload.Length;
            </code>
            </remarks>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSMsg`1.Headers">
            <summary>
            Headers of the user message if set.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSMsg`1.Data">
            <summary>
            Deserialized user data.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSMsg`1.Connection">
            <summary>
            The connection messages was delivered on.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSMsg`1.Metadata">
            <summary>
            Additional metadata about the message.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSMsg`1.ReplyTo">
            <summary>
            The reply subject that subscribers can use to send a response back to the publisher/requester.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.INatsJSMsg`1.Error">
            <summary>Any errors (generally serialization errors) encountered while processing the message.</summary>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSMsg`1.EnsureSuccess">
            <summary>Throws an exception if the message contains any errors (generally serialization errors).</summary>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSMsg`1.ReplyAsync(NATS.Client.Core.NatsHeaders,System.String,NATS.Client.Core.NatsPubOpts,System.Threading.CancellationToken)">
            <summary>
            Reply with an empty message.
            </summary>
            <param name="headers">Optional message headers.</param>
            <param name="replyTo">Optional reply-to subject.</param>
            <param name="opts">A <see cref="T:NATS.Client.Core.NatsPubOpts"/> for publishing options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the command.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous send operation.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSMsg`1.AckAsync(System.Nullable{NATS.Client.JetStream.AckOpts},System.Threading.CancellationToken)">
            <summary>
            Acknowledges the message was completely handled.
            </summary>
            <param name="opts">Ack options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the async call.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSMsg`1.NakAsync(System.Nullable{NATS.Client.JetStream.AckOpts},System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Signals that the message will not be processed now and processing can move onto the next message.
            </summary>
            <param name="delay">Delay redelivery of the message.</param>
            <param name="opts">Ack options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the async call.</returns>
            <remarks>
            Messages rejected using <c>-NAK</c> will be resent by the NATS JetStream server after the configured timeout
            or the delay parameter if it's specified.
            </remarks>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSMsg`1.AckProgressAsync(System.Nullable{NATS.Client.JetStream.AckOpts},System.Threading.CancellationToken)">
            <summary>
            Indicates that work is ongoing and the wait period should be extended.
            </summary>
            <param name="opts">Ack options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the async call.</returns>
            <remarks>
            <para>
            Time period is defined by the consumer's <c>ack_wait</c> configuration on the server which is
            defined as how long to allow messages to remain un-acknowledged before attempting redelivery.
            </para>
            <para>
            This message must be sent before the <c>ack_wait</c> period elapses. The period should be extended
            by another amount of time equal to <c>ack_wait</c> by the NATS JetStream server.
            </para>
            </remarks>
        </member>
        <member name="M:NATS.Client.JetStream.INatsJSMsg`1.AckTerminateAsync(System.Nullable{NATS.Client.JetStream.AckOpts},System.Threading.CancellationToken)">
            <summary>
            Instructs the server to stop redelivery of the message without acknowledging it as successfully processed.
            </summary>
            <param name="opts">Ack options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the async call.</returns>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSMsg`1">
            <summary>
            NATS JetStream message with <see cref="T:NATS.Client.Core.NatsMsg`1"/> and control messages.
            </summary>
            <typeparam name="T">User message type</typeparam>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsg`1.Subject">
            <summary>
            Subject of the user message.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsg`1.Size">
            <summary>
            Message size in bytes.
            </summary>
            <remarks>
            Message size is calculated using the same method NATS server uses:
            <code lang="C#">
            int size = subject.Length + replyTo.Length + headers.Length + payload.Length;
            </code>
            </remarks>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsg`1.Headers">
            <summary>
            Headers of the user message if set.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsg`1.Data">
            <summary>
            Deserialized user data.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsg`1.Connection">
            <summary>
            The connection messages was delivered on.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsg`1.Metadata">
            <summary>
            Additional metadata about the message.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsg`1.ReplyTo">
            <summary>
            The reply subject that subscribers can use to send a response back to the publisher/requester.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsg`1.Error">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSMsg`1.EnsureSuccess">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSMsg`1.ReplyAsync(NATS.Client.Core.NatsHeaders,System.String,NATS.Client.Core.NatsPubOpts,System.Threading.CancellationToken)">
            <summary>
            Reply with an empty message.
            </summary>
            <param name="headers">Optional message headers.</param>
            <param name="replyTo">Optional reply-to subject.</param>
            <param name="opts">A <see cref="T:NATS.Client.Core.NatsPubOpts"/> for publishing options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the command.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous send operation.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSMsg`1.AckAsync(System.Nullable{NATS.Client.JetStream.AckOpts},System.Threading.CancellationToken)">
            <summary>
            Acknowledges the message was completely handled.
            </summary>
            <param name="opts">Ack options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the async call.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSMsg`1.NakAsync(System.Nullable{NATS.Client.JetStream.AckOpts},System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Signals that the message will not be processed now and processing can move onto the next message.
            </summary>
            <param name="delay">Delay redelivery of the message.</param>
            <param name="opts">Ack options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the async call.</returns>
            <remarks>
            Messages rejected using <c>-NAK</c> will be resent by the NATS JetStream server after the configured timeout
            or the delay parameter if it's specified.
            </remarks>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSMsg`1.AckProgressAsync(System.Nullable{NATS.Client.JetStream.AckOpts},System.Threading.CancellationToken)">
            <summary>
            Indicates that work is ongoing and the wait period should be extended.
            </summary>
            <param name="opts">Ack options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the async call.</returns>
            <remarks>
            <para>
            Time period is defined by the consumer's <c>ack_wait</c> configuration on the server which is
            defined as how long to allow messages to remain un-acknowledged before attempting redelivery.
            </para>
            <para>
            This message must be sent before the <c>ack_wait</c> period elapses. The period should be extended
            by another amount of time equal to <c>ack_wait</c> by the NATS JetStream server.
            </para>
            </remarks>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSMsg`1.AckTerminateAsync(System.Nullable{NATS.Client.JetStream.AckOpts},System.Threading.CancellationToken)">
            <summary>
            Instructs the server to stop redelivery of the message without acknowledging it as successfully processed.
            </summary>
            <param name="opts">Ack options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the call.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> representing the async call.</returns>
        </member>
        <member name="T:NATS.Client.JetStream.AckOpts">
            <summary>
            Options to be used when acknowledging messages received from a stream using a consumer.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.AckOpts.DoubleAck">
            <summary>
            Ask server for an acknowledgment
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSMsgMetadata">
            <summary>
            Additional metadata about the message.
            </summary>
            <param name="Sequence">
            The sequence pair for the message.
            </param>
            <param name="NumDelivered">
            The number of times the message was delivered.
            </param>
            <param name="NumPending">
            The number of messages pending for the consumer.
            </param>
            <param name="Timestamp">
            The timestamp of the message.
            </param>
            <param name="Stream">
            The stream the message was sent to.
            </param>
            <param name="Consumer">
            The consumer the message was sent to.
            </param>
            <param name="Domain">
            The domain the message was sent to.
            </param>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSMsgMetadata.#ctor(NATS.Client.JetStream.NatsJSSequencePair,System.UInt64,System.UInt64,System.DateTimeOffset,System.String,System.String,System.String)">
            <summary>
            Additional metadata about the message.
            </summary>
            <param name="Sequence">
            The sequence pair for the message.
            </param>
            <param name="NumDelivered">
            The number of times the message was delivered.
            </param>
            <param name="NumPending">
            The number of messages pending for the consumer.
            </param>
            <param name="Timestamp">
            The timestamp of the message.
            </param>
            <param name="Stream">
            The stream the message was sent to.
            </param>
            <param name="Consumer">
            The consumer the message was sent to.
            </param>
            <param name="Domain">
            The domain the message was sent to.
            </param>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsgMetadata.Sequence">
            <summary>
            The sequence pair for the message.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsgMetadata.NumDelivered">
            <summary>
            The number of times the message was delivered.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsgMetadata.NumPending">
            <summary>
            The number of messages pending for the consumer.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsgMetadata.Timestamp">
            <summary>
            The timestamp of the message.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsgMetadata.Stream">
            <summary>
            The stream the message was sent to.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsgMetadata.Consumer">
            <summary>
            The consumer the message was sent to.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSMsgMetadata.Domain">
            <summary>
            The domain the message was sent to.
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSSequencePair">
            <summary>
            The sequence pair for the message.
            </summary>
            <param name="Stream">
            The stream sequence number.
            </param>
            <param name="Consumer">
            The consumer sequence number.
            </param>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSSequencePair.#ctor(System.UInt64,System.UInt64)">
            <summary>
            The sequence pair for the message.
            </summary>
            <param name="Stream">
            The stream sequence number.
            </param>
            <param name="Consumer">
            The consumer sequence number.
            </param>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSSequencePair.Stream">
            <summary>
            The stream sequence number.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSSequencePair.Consumer">
            <summary>
            The consumer sequence number.
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSOpts">
            <summary>
            JetStream options to be used within a JetStream context.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSOpts.Prefix">
            <summary>
            Complete prefix to prepend to JetStream API subjects as it's dynamically built from ApiPrefix and Domain properties.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSOpts.ApiPrefix">
            <summary>
            Prefix to prepend to JetStream API subjects. (default: $JS.API)
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSOpts.Domain">
            <summary>
            JetStream domain to use in JetStream API subjects. (default: null)
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSOpts.DoubleAck">
            <summary>
            Ask server for an acknowledgment.
            </summary>
            <remarks>
            Defaults to false.
            </remarks>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSOpts.DefaultConsumeOpts">
            <summary>
            Default consume options to be used in consume calls in this context.
            </summary>
            <remarks>
            Defaults to MaxMsgs = 1,000.
            </remarks>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSOpts.DefaultNextOpts">
            <summary>
            Default next options to be used in next calls in this context.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSOrderedConsumerOpts.MaxResetAttempts">
            <summary>
            Maximum number of attempts for the consumer to be recreated (Defaults to unlimited).
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSConsumeOpts">
            <summary>
            Consumer consume method options.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSConsumeOpts.MaxMsgs">
            <summary>
            Maximum number of messages stored in the buffer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSConsumeOpts.Expires">
            <summary>
            Amount of time to wait for a single pull request to expire
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSConsumeOpts.MaxBytes">
            <summary>
            Maximum number of bytes stored in the buffer
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSConsumeOpts.IdleHeartbeat">
            <summary>
            Amount idle time the server should wait before sending a heartbeat
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSConsumeOpts.ThresholdMsgs">
            <summary>
            Number of messages left in the buffer that should trigger a low watermark on the client, and influence it to request more messages
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSConsumeOpts.ThresholdBytes">
            <summary>
            Hint for the number of bytes left in buffer that should trigger a low watermark on the client, and influence it to request more data.
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSNextOpts">
            <summary>
            Consumer next method options.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSNextOpts.Expires">
            <summary>
            Amount of time to wait for the request to expire (in nanoseconds)
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSNextOpts.IdleHeartbeat">
            <summary>
            Amount idle time the server should wait before sending a heartbeat. For requests with expires > 30s, heartbeats should be enabled by default
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSFetchOpts">
            <summary>
            Consumer fetch method options.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSFetchOpts.MaxMsgs">
            <summary>
            Maximum number of messages to return
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSFetchOpts.Expires">
            <summary>
            Amount of time to wait for the request to expire
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSFetchOpts.MaxBytes">
            <summary>
            Maximum number of bytes to return
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSFetchOpts.IdleHeartbeat">
            <summary>
            Amount idle time the server should wait before sending a heartbeat. For requests with expires > 30s, heartbeats should be enabled by default
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSFetchOpts.NoWait">
            <summary>
            Does not wait for messages to be available
            </summary>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSOrderedConsumer">
            <summary>
            NATS JetStream ordered consumer.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSOrderedConsumer.#ctor(System.String,NATS.Client.JetStream.NatsJSContext,NATS.Client.JetStream.NatsJSOrderedConsumerOpts,System.Threading.CancellationToken)">
            <summary>
            Creates a new NATS JetStream ordered consumer.
            </summary>
            <param name="stream">Name of the stream.</param>
            <param name="context">NATS JetStream context.</param>
            <param name="opts">Consumer options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel consume and fetch operations.</param>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSOrderedConsumer.Info">
            <summary>
            Consumer info object created during consume and fetch operations.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSOrderedConsumer.ConsumeAsync``1(NATS.Client.Core.INatsDeserialize{``0},NATS.Client.JetStream.NatsJSConsumeOpts,System.Threading.CancellationToken)">
            <summary>
            Consume messages from the stream in order.
            </summary>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="opts">Consume options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel consume operation.</param>
            <typeparam name="T">Serialized message data type.</typeparam>
            <returns>Asynchronous enumeration which can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSProtocolException">There was a JetStream server error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSOrderedConsumer.FetchAsync``1(NATS.Client.JetStream.NatsJSFetchOpts,NATS.Client.Core.INatsDeserialize{``0},System.Threading.CancellationToken)">
            <summary>
            Fetch messages from the stream in order.
            </summary>
            <param name="opts">Fetch options.</param>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel fetch operation.</param>
            <typeparam name="T">Serialized message data type.</typeparam>
            <returns>Asynchronous enumeration which can be used in a <c>await foreach</c> loop.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSOrderedConsumer.FetchNoWaitAsync``1(NATS.Client.JetStream.NatsJSFetchOpts,NATS.Client.Core.INatsDeserialize{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSOrderedConsumer.NextAsync``1(NATS.Client.Core.INatsDeserialize{``0},NATS.Client.JetStream.NatsJSNextOpts,System.Threading.CancellationToken)">
            <summary>
            Get the next message from the stream in order.
            </summary>
            <param name="serializer">Serializer to use for the message type.</param>
            <param name="opts">Next options.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the underlying fetch operation.</param>
            <typeparam name="T">Serialized message data type.</typeparam>
            <returns>The next NATS JetStream message in order.</returns>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSOrderedConsumer.RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            For ordered consumer this is a no-op.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
        </member>
        <member name="T:NATS.Client.JetStream.NatsJSStream">
            <summary>
            Represents a NATS JetStream stream.
            </summary>
        </member>
        <member name="P:NATS.Client.JetStream.NatsJSStream.Info">
            <summary>
            Stream info object as retrieved from NATS JetStream server at the time this object was created, updated or refreshed.
            </summary>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
            Delete this stream.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether delete was successful or not.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <remarks>After deletion this object can't be used anymore.</remarks>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.PurgeAsync(NATS.Client.JetStream.Models.StreamPurgeRequest,System.Threading.CancellationToken)">
            <summary>
            Purge data from this stream. Leaves the stream.
            </summary>
            <param name="request">Purge request.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether delete was successful or not.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
            <remarks>After deletion this object can't be used anymore.</remarks>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.DeleteMessageAsync(NATS.Client.JetStream.Models.StreamMsgDeleteRequest,System.Threading.CancellationToken)">
            <summary>
            Deletes a message from a stream.
            </summary>
            <param name="request">Delete message request.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Delete message response</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.UpdateAsync(NATS.Client.JetStream.Models.StreamConfig,System.Threading.CancellationToken)">
            <summary>
            Update stream properties on the server.
            </summary>
            <param name="request">Stream update request to be sent to the server.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.CreateOrUpdateConsumerAsync(NATS.Client.JetStream.Models.ConsumerConfig,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.GetConsumerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets consumer information from the server and creates a NATS JetStream consumer <see cref="T:NATS.Client.JetStream.NatsJSConsumer"/>.
            </summary>
            <param name="consumer">Consumer name.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>The NATS JetStream consumer object which can be used retrieving data from the stream.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.ListConsumersAsync(System.Threading.CancellationToken)">
            <summary>
            Enumerates through consumers that belong to this stream.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable of consumer objects. Can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.ListConsumerNamesAsync(System.Threading.CancellationToken)">
            <summary>
            Enumerates through consumer names that belong to this stream.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Async enumerable of consumer names. Can be used in a <c>await foreach</c> loop.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.DeleteConsumerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete a consumer from this stream.
            </summary>
            <param name="consumer">Consumer name to be deleted.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <returns>Whether the deletion was successful.</returns>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There is an error retrieving the response or this consumer object isn't valid anymore because it was deleted earlier.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Client.JetStream.NatsJSStream.RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve the stream info from the server and update this stream.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to cancel the API call.</param>
            <exception cref="T:NATS.Client.JetStream.NatsJSException">There was an issue retrieving the response.</exception>
            <exception cref="T:NATS.Client.JetStream.NatsJSApiException">Server responded with an error.</exception>
        </member>
        <member name="M:NATS.Net.NatsClientExtensions.CreateJetStreamContext(NATS.Client.Core.INatsClient)">
            <summary>
            Creates a JetStream context using the provided NATS client.
            </summary>
            <param name="client">The NATS client used to create the JetStream context.</param>
            <returns>Returns an instance of <see cref="T:NATS.Client.JetStream.INatsJSContext"/> for interacting with JetStream.</returns>
        </member>
        <member name="M:NATS.Net.NatsClientExtensions.CreateJetStreamContext(NATS.Client.Core.INatsConnection)">
            <summary>
            Creates a JetStream context using the provided NATS connection.
            </summary>
            <param name="connection">The NATS connection used to create the JetStream context.</param>
            <returns>Returns an instance of <see cref="T:NATS.Client.JetStream.INatsJSContext"/> for interacting with JetStream.</returns>
        </member>
    </members>
</doc>
